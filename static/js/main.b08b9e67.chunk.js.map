{"version":3,"sources":["serviceWorker.js","login/styles.js","login/login.js","signup/styles.js","signup/signup.js","chatList/styles.js","chatList/chatList.js","dashboard/styles.js","chatView/styles.js","chatView/chatView.js","chatTextBox/styles.js","chatTextBox/chatTextBox.js","dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","hasAccountHeader","logInLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","type","e","setState","email","target","value","password","submitLogin","a","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","loginError","console","log","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","components","noAccountHeader","signupLink","to","React","Component","withStyles","SignupComponent","passwordConfirmation","submitSignup","formisValid","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbError","signupError","authError","colour","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatListComponent","selectChat","index","selectChatFn","newChat","chats","length","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","allignItems","ListItemAvatar","Avatar","alt","users","filter","_user","userEmail","split","toUpperCase","ListItemText","primary","secondary","Fragment","messages","message","substring","Divider","signOutBtn","bottom","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","chat","undefined","_usr","_msg","sender","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBoxComponent","submitMessage","messageValid","chatText","submitMessageFn","userClickedInput","keyCode","submitMesage","txt","replace","TextField","placeholder","onFocus","onKeyUp","DashboardComponent","signOut","chatIndex","selectedChat","newChatButtonClicked","newChatFormVisible","buildDocKey","friend","sort","join","msg","docKey","update","FieldValue","arrayUnion","timestamp","Date","now","recieverHasRead","componentDidMount","onAuthStateChanged","where","onSnapshot","res","docs","_doc","data","newChatBtnFn","newChatBtnClicked","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","action","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b08b9e67.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles\";\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      loginError: \"\",\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-email-input\">\n                Enter Your Email\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                autoFocus\n                id=\"login-email-input\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-password-input\">\n                Enter Your Password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                autoComplete=\"password\"\n                id=\"login-passwprd-input\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log In\n            </Button>\n          </form>\n          {this.state.loginError ? (\n            <Typography\n              components=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              Incorrect Login Information\n            </Typography>\n          ) : null}\n          <Typography\n            components=\"h5\"\n            variant=\"h6\"\n            className={classes.noAccountHeader}\n          >\n            Don't have an account?\n          </Typography>\n          <Link className={classes.signupLink} to=\"./signup\">\n            Sign Up\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitLogin = async (e) => {\n    e.preventDefault();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        () => {\n          this.props.history.push(\"./dashboard\");\n        },\n        (err) => {\n          this.setState({ loginError: \"Server Error\" });\n          console.log(err);\n        }\n      );\n  };\n}\n\nexport default withStyles(styles)(LoginComponent);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: \"\",\n    };\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitSignup = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    if (!this.formisValid()) {\n      this.setState({ signupError: \"Paswords do not match\" });\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        (authRes) => {\n          const userObj = {\n            email: authRes.user.email,\n          };\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(this.state.email)\n            .set(userObj)\n            .then(\n              () => {\n                this.props.history.push(\"./dashboard\");\n              },\n              (dbError) => {\n                console.log(dbError);\n                this.setState({ signupError: \"Failed to add user\" });\n              }\n            );\n        },\n        (authError) => {\n          console.log(authError);\n          this.setState({ signupError: \"Failed to add user\" });\n        }\n      );\n  };\n\n  formisValid = () => this.state.password === this.state.passwordConfirmation;\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign UP!\n          </Typography>\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-email-input\">\n                \"Enter Your Email\"\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n                autoFocus\n                id=\"signup-email-input\"\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-input\">\n                \"Create your password\"\n              </InputLabel>\n              <Input\n                type=\"password\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n                id=\"signup-password-input\"\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\n                \"Confirm your password\"\n              </InputLabel>\n              <Input\n                type=\"password\"\n                onChange={(e) => this.userTyping(\"passwordConfirmation\", e)}\n                id=\"signup-password-confirmation-input\"\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              colour=\"primary\"\n              className={classes.submit}\n            >\n              SUBMIT\n            </Button>\n          </form>\n          {this.state.signupError ? (\n            <Typography\n              className={classes.errorText}\n              component=\"h5\"\n              variant=\"h6\"\n            >\n              {this.state.signupError}\n            </Typography>\n          ) : null}\n          <Typography\n            component=\"h5\"\n            variant=\"h6\"\n            className={classes.hasAccountHeader}\n          >\n            Already have an account?\n          </Typography>\n          <Link className={classes.logInLink} to=\"./login\">\n            Log in!\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignupComponent);\n","const styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 35px)\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"300px\",\n    boxShadow: \"0px 0px 2px black\",\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  newChatBtn: {\n    borderRadius: \"0px\",\n  },\n  unreadMessage: {\n    color: \"red\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chats.length > 0) {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === _index}\n                    allignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {_chat.users\n                          .filter((_user) => _user !== this.props.userEmail)[0]\n                          .split(\"\")[0]\n                          .toUpperCase()}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        _chat.users.filter(\n                          (_user) => _user !== this.props.userEmail\n                        )[0]\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography component=\"span\" color=\"text-primary\">\n                            {_chat.messages[\n                              _chat.messages.length - 1\n                            ].message.substring(0, 30)}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    ></ListItemText>\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </main>\n      );\n    } else {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n            color=\"primary\"\n          >\n            New Message\n          </Button>\n          <List></List>\n        </main>\n      );\n    }\n  }\n\n  selectChat = (index) => {\n    this.props.selectChatFn(index);\n  };\n\n  newChat = () => {\n    console.log(\"clicked new chat\");\n  };\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","const styles = (theme) => ({\n  signOutBtn: {\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    width: \"300px\",\n    borderRadius: \"0px\",\n    backgroundColor: \"#227092\",\n    height: \"35px\",\n    boxShadow: \"0px 0px 2px black\",\n    color: \"white\",\n  },\n});\n\nexport default styles;\n","const styles = (theme) => ({\n  content: {\n    height: \"calc(100vh - 100px)\",\n    overflow: \"auto\",\n    padding: \"25px\",\n    marginLeft: \"300px\",\n    boxSizing: \"border-box\",\n    overflowY: \"scroll\",\n    top: \"50px\",\n    width: \"calc(100% - 300px)\",\n    position: \"absolute\",\n  },\n\n  userSent: {\n    float: \"left\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\",\n  },\n\n  friendSent: {\n    float: \"right\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\",\n  },\n\n  chatHeader: {\n    width: \"calc(100% - 301px)\",\n    height: \"50px\",\n    backgroundColor: \"#344195\",\n    position: \"fixed\",\n    marginLeft: \"301px\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    color: \"white\",\n    paddingTop: \"10px\",\n    boxSizing: \"border-box\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass ChatViewComponent extends React.Component {\n  componentDidUpdate = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) {\n      container.scrollTo(0, container.scrollHeight);\n    }\n  };\n\n  render() {\n    const { classes, chat, user } = this.props;\n    if (chat === undefined) {\n      return <main id=\"chatview-container\" className={classes.content}></main>;\n    } else {\n      return (\n        <div>\n          <div className={classes.chatHeader}>\n            Your Conversation with{\" \"}\n            {chat.users.filter((_usr) => _usr !== user)[0]}\n          </div>\n          <main id=\"chatview-container\" className={classes.content}>\n            {chat.messages.map((_msg, _index) => {\n              return (\n                <div\n                  key={_index}\n                  className={\n                    _msg.sender === user ? classes.userSent : classes.friendSent\n                  }\n                >\n                  {_msg.message}\n                </div>\n              );\n            })}\n          </main>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatViewComponent);\n","const styles = (theme) => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\",\n    },\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    left: \"315px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n    width: \"calc(100% - 300px - 50px)\",\n  },\n\n  chatTextBox: {\n    width: \"calc(100% - 25px)\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatTextBoxComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\",\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          className={classes.chatTextBox}\n          placeholder=\"Type your message...\"\n          id=\"chattextbox\"\n          onFocus={this.userClickedInput}\n          onKeyUp={(e) => this.userTyping(e)}\n        ></TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    );\n  }\n\n  submitMessage = () => {\n    console.log(\"message submitted\");\n    if (this.messageValid(this.state.chatText)) {\n      this.props.submitMessageFn(this.state.chatText);\n      document.getElementById(\"chattextbox\").value = \"\";\n    }\n  };\n\n  userClickedInput = () => {\n    console.log(\"user clicked input\");\n  };\n\n  userTyping = (e) => {\n    e.keyCode === 13\n      ? this.submitMesage()\n      : this.setState({ chatText: e.target.value });\n  };\n  messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);\n","import React from \"react\";\nimport ChatListComponent from \"../chatList/chatList\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport ChatViewComponent from \"../chatView/chatView\";\nimport ChatTextBoxComponent from \"../chatTextBox/chatTextBox\";\n\nconst firebase = require(\"firebase\");\n\nclass DashboardComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: [],\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <ChatListComponent\n          history={this.props.history}\n          newChatBtnFn={this.newChatBtnClicked}\n          selectChatFn={this.selectChat}\n          chats={this.state.chats}\n          userEmail={this.state.email}\n          selectedChatIndex={this.state.selectedChat}\n        ></ChatListComponent>\n        {this.state.newChatFormVisible ? null : (\n          <ChatViewComponent\n            user={this.state.email}\n            chat={this.state.chats[this.state.selectedChat]}\n          ></ChatViewComponent>\n        )}\n        {this.state.selectedChat !== null && !this.state.newChatFormVisible ? (\n          <ChatTextBoxComponent\n            submitMessageFn={this.submitMessage}\n          ></ChatTextBoxComponent>\n        ) : null}\n        <Button className={classes.signOutBtn} onClick={this.signOut}>\n          Sign Out\n        </Button>\n      </div>\n    );\n  }\n\n  signOut = () => {\n    firebase.auth().signOut();\n  };\n\n  selectChat = (chatIndex) => {\n    this.setState({ selectedChat: chatIndex });\n  };\n\n  newChatButtonClicked = () => {\n    this.setState({ newChatFormVisible: true, selectedChat: null });\n  };\n\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\n\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now(),\n        }),\n        recieverHasRead: false,\n      });\n  };\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if (!_usr) {\n        this.props.history.push(\"./login\");\n      } else {\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .where(\"users\", \"array-contains\", _usr.email)\n          .onSnapshot(async (res) => {\n            const chats = res.docs.map((_doc) => _doc.data());\n            await this.setState({\n              email: _usr.email,\n              chats: chats,\n            });\n            console.log(this.state);\n          });\n      }\n    });\n  };\n}\n\nexport default withStyles(styles)(DashboardComponent);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport LoginComponent from \"./login/login\";\nimport SignupComponent from \"./signup/signup\";\nimport DashboardComponent from \"./dashboard/dashboard\";\nimport { DialogContent } from \"@material-ui/core\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDhcL65NnZOlCzt5fR5VqNUX9Srl2Wpad0\",\n  authDomain: \"chatapp-c72b5.firebaseapp.com\",\n  databaseURL: \"https://chatapp-c72b5.firebaseio.com\",\n  projectId: \"chatapp-c72b5\",\n  storageBucket: \"chatapp-c72b5.appspot.com\",\n  messagingSenderId: \"500887238408\",\n  appId: \"1:500887238408:web:090b7fe0732b377c78debd\",\n  measurementId: \"G-91SHJECPWK\",\n});\n\nconst routing = (\n  <Router>\n    <div id=\"routing container\">\n      <Route path=\"\">\n        <div>\n          <form action=\"/login\">\n            <input type=\"submit\" value=\"Go to website\" />\n          </form>\n        </div>\n      </Route>\n      <Route path=\"/login\" component={LoginComponent}></Route>\n      <Route path=\"/signup\" component={SignupComponent}></Route>\n      <Route path=\"/dashboard\" component={DashboardComponent}></Route>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}