{"version":3,"sources":["serviceWorker.js","login/styles.js","login/login.js","signup/styles.js","signup/signup.js","newChat/styles.js","newChat/newChat.js","chatList/styles.js","chatList/chatList.js","dashboard/styles.js","chatView/styles.js","chatView/chatView.js","chatTextBox/styles.js","chatTextBox/chatTextBox.js","dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","hasAccountHeader","logInLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","type","e","setState","email","target","value","password","submitLogin","a","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","loginError","console","log","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","components","noAccountHeader","signupLink","to","React","Component","withStyles","SignupComponent","passwordConfirmation","submitSignup","formisValid","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbError","signupError","authError","colour","unit","position","top","left","input","NewChatComponent","inputType","username","message","submitNewChat","userExists","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","docKey","get","chat","exists","usersSnapshot","docs","map","_doc","data","includes","serverError","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatListComponent","userIsSender","messages","length","sender","userEmail","selectChat","index","selectChatFn","newChat","newChatBtnFn","chats","onClick","List","_chat","_index","key","ListItem","selected","selectedChatIndex","allignItems","ListItemAvatar","Avatar","alt","users","filter","_user","split","toUpperCase","ListItemText","primary","secondary","Fragment","substring","recieverHasRead","ListItemIcon","Divider","signOutBtn","bottom","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","componentDidMount","undefined","_usr","_msg","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBoxComponent","submitMessage","messageValid","chatText","submitMessageFn","userClickedInput","userClickedInputFn","keyCode","submitMesage","txt","replace","TextField","placeholder","onFocus","onKeyUp","DashboardComponent","signOut","msg","selectedChat","update","FieldValue","arrayUnion","timestamp","Date","now","receiverHasRead","friend","newChatBtnClicked","newChatFormVisible","newChatSubmit","chatObj","chatIndex","messageRead","usersInChat","find","every","indexOf","clickedMessageWhereNotSender","componentWillMount","onAuthStateChanged","where","onSnapshot","res","friends","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","basename","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.67f0e837.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles\";\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      loginError: \"\",\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-email-input\">\n                Enter Your Email\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                autoFocus\n                id=\"login-email-input\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-password-input\">\n                Enter Your Password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                autoComplete=\"password\"\n                id=\"login-passwprd-input\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log In\n            </Button>\n          </form>\n          {this.state.loginError ? (\n            <Typography\n              components=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              Incorrect Login Information\n            </Typography>\n          ) : null}\n          <Typography\n            components=\"h5\"\n            variant=\"h6\"\n            className={classes.noAccountHeader}\n          >\n            Don't have an account?\n          </Typography>\n          <Link className={classes.signupLink} to=\"./signup\">\n            Sign Up\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitLogin = async (e) => {\n    e.preventDefault();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        () => {\n          this.props.history.push(\"./dashboard\");\n        },\n        (err) => {\n          this.setState({ loginError: \"Server Error\" });\n          console.log(err);\n        }\n      );\n  };\n}\n\nexport default withStyles(styles)(LoginComponent);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: \"\",\n    };\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitSignup = (e) => {\n    e.preventDefault();\n    if (!this.formisValid()) {\n      this.setState({ signupError: \"Paswords do not match\" });\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        (authRes) => {\n          const userObj = {\n            email: authRes.user.email,\n          };\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(this.state.email)\n            .set(userObj)\n            .then(\n              () => {\n                this.props.history.push(\"./dashboard\");\n              },\n              (dbError) => {\n                console.log(dbError);\n                this.setState({ signupError: \"Failed to add user\" });\n              }\n            );\n        },\n        (authError) => {\n          console.log(authError);\n          this.setState({ signupError: \"Failed to add user\" });\n        }\n      );\n  };\n\n  formisValid = () => this.state.password === this.state.passwordConfirmation;\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign UP!\n          </Typography>\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-email-input\">\n                \"Enter Your Email\"\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n                autoFocus\n                id=\"signup-email-input\"\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-input\">\n                \"Create your password\"\n              </InputLabel>\n              <Input\n                type=\"password\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n                id=\"signup-password-input\"\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\n                \"Confirm your password\"\n              </InputLabel>\n              <Input\n                type=\"password\"\n                onChange={(e) => this.userTyping(\"passwordConfirmation\", e)}\n                id=\"signup-password-confirmation-input\"\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              colour=\"primary\"\n              className={classes.submit}\n            >\n              SUBMIT\n            </Button>\n          </form>\n          {this.state.signupError ? (\n            <Typography\n              className={classes.errorText}\n              component=\"h5\"\n              variant=\"h6\"\n            >\n              {this.state.signupError}\n            </Typography>\n          ) : null}\n          <Typography\n            component=\"h5\"\n            variant=\"h6\"\n            className={classes.hasAccountHeader}\n          >\n            Already have an account?\n          </Typography>\n          <Link className={classes.logInLink} to=\"./login\">\n            Log in!\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignupComponent);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n    position: \"absolute\",\n    width: \"350px\",\n    top: \"50px\",\n    left: \"calc(50% + 150px - 175px)\",\n  },\n  input: {},\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Paper,\n  withStyles,\n  CssBaseline,\n  Typography,\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null,\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Send A Message!\n          </Typography>\n          <form\n            className={classes.form}\n            onSubmit={(e) => this.submitNewChat(e)}\n          >\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-username\">\n                Enter Your Friend's Email\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                autoFocus\n                onChange={(e) => this.userTyping(\"username\", e)}\n                id=\"new-chat-username\"\n              ></Input>\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-message\">\n                Enter Your Message\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                onChange={(e) => this.userTyping(\"message\", e)}\n                id=\"new-chat-message\"\n              ></Input>\n            </FormControl>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </form>\n          {this.state.serverError ? (\n            <Typography\n              component=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              Unable to locate the user\n            </Typography>\n          ) : null}\n        </Paper>\n      </main>\n    );\n  }\n\n  componentWillMount() {\n    if (!firebase.auth().currentUser) this.props.history.push(\"/login\");\n  }\n\n  userTyping = (inputType, e) => {\n    switch (inputType) {\n      case \"username\":\n        this.setState({ username: e.target.value });\n        break;\n\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitNewChat = async (e) => {\n    e.preventDefault();\n    const userExists = await this.userExists();\n    if (userExists) {\n      const chatExists = await this.chatExists();\n      chatExists ? this.goToChat() : this.createChat();\n    }\n  };\n\n  buildDocKey = () =>\n    [firebase.auth().currentUser.email, this.state.username].sort().join(\":\");\n\n  createChat = () => {\n    this.props.newChatSubmitFn({\n      sendTo: this.state.username,\n      message: this.state.message,\n    });\n  };\n\n  goToChat = () =>\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\n\n  chatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  };\n  userExists = async () => {\n    const usersSnapshot = await firebase.firestore().collection(\"users\").get();\n    const exists = usersSnapshot.docs\n      .map((_doc) => _doc.data().email)\n      .includes(this.state.username);\n    this.setState({ serverError: !exists });\n    return exists;\n  };\n}\n\nexport default withStyles(styles)(NewChatComponent);\n","const styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 35px)\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"300px\",\n    boxShadow: \"0px 0px 2px black\",\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  newChatBtn: {\n    borderRadius: \"0px\",\n  },\n  unreadMessage: {\n    color: \"red\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chats.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === _index}\n                    allignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {_chat.users\n                          .filter((_user) => _user !== this.props.userEmail)[0]\n                          .split(\"\")[0]\n                          .toUpperCase()}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        _chat.users.filter(\n                          (_user) => _user !== this.props.userEmail\n                        )[0]\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography component=\"span\" color=\"text-primary\">\n                            {_chat.messages[\n                              _chat.messages.length - 1\n                            ].message.substring(0, 30)}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    ></ListItemText>\n                    {_chat.recieverHasRead === false &&\n                    !this.userIsSender(_chat) ? (\n                      <ListItemIcon>\n                        <NotificationImportant\n                          className={classes.unreadMessage}\n                        ></NotificationImportant>\n                      </ListItemIcon>\n                    ) : null}\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n            color=\"primary\"\n          >\n            New Message\n          </Button>\n          <List></List>\n        </div>\n      );\n    }\n  }\n  userIsSender = (chat) =>\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n\n  selectChat = (index) => {\n    this.props.selectChatFn(index);\n  };\n\n  newChat = () => {\n    this.props.newChatBtnFn();\n  };\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","const styles = (theme) => ({\n  signOutBtn: {\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    width: \"300px\",\n    borderRadius: \"0px\",\n    backgroundColor: \"#227092\",\n    height: \"35px\",\n    boxShadow: \"0px 0px 2px black\",\n    color: \"white\",\n  },\n});\n\nexport default styles;\n","const styles = (theme) => ({\n  content: {\n    height: \"calc(100vh - 100px)\",\n    overflow: \"auto\",\n    padding: \"25px\",\n    marginLeft: \"300px\",\n    boxSizing: \"border-box\",\n    overflowY: \"scroll\",\n    top: \"50px\",\n    width: \"calc(100% - 300px)\",\n    position: \"absolute\",\n  },\n\n  userSent: {\n    float: \"left\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\",\n  },\n\n  friendSent: {\n    float: \"right\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\",\n  },\n\n  chatHeader: {\n    width: \"calc(100% - 301px)\",\n    height: \"50px\",\n    backgroundColor: \"#344195\",\n    position: \"fixed\",\n    marginLeft: \"301px\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    color: \"white\",\n    paddingTop: \"10px\",\n    boxSizing: \"border-box\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass ChatViewComponent extends React.Component {\n  componentDidUpdate = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) {\n      container.scrollTo(0, container.scrollHeight);\n    }\n  };\n\n  componentDidMount = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) container.scrollTo(0, container.scrollHeight);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chat === undefined) {\n      return <main className={classes.content}></main>;\n    } else if (this.props.chat !== undefined) {\n      return (\n        <div>\n          <div className={classes.chatHeader}>\n            Your conversation with{\" \"}\n            {\n              this.props.chat.users.filter(\n                (_usr) => _usr !== this.props.user\n              )[0]\n            }\n          </div>\n          <main id=\"chatview-container\" className={classes.content}>\n            {this.props.chat.messages.map((_msg, _index) => {\n              return (\n                <div\n                  key={_index}\n                  className={\n                    _msg.sender === this.props.user\n                      ? classes.userSent\n                      : classes.friendSent\n                  }\n                >\n                  {_msg.message}\n                </div>\n              );\n            })}\n          </main>\n        </div>\n      );\n    } else {\n      return <div className=\"chatview-container\">Loading...</div>;\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatViewComponent);\n","const styles = (theme) => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\",\n    },\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    left: \"315px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n    width: \"calc(100% - 300px - 50px)\",\n  },\n\n  chatTextBox: {\n    width: \"calc(100% - 25px)\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatTextBoxComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\",\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          className={classes.chatTextBox}\n          placeholder=\"Type your message...\"\n          id=\"chattextbox\"\n          onFocus={this.userClickedInput}\n          onKeyUp={(e) => this.userTyping(e)}\n        ></TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    );\n  }\n\n  submitMessage = () => {\n    console.log(\"message submitted\");\n    if (this.messageValid(this.state.chatText)) {\n      this.props.submitMessageFn(this.state.chatText);\n      document.getElementById(\"chattextbox\").value = \"\";\n    }\n  };\n\n  userClickedInput = () => this.props.userClickedInputFn();\n\n  userTyping = (e) => {\n    e.keyCode === 13\n      ? this.submitMesage()\n      : this.setState({ chatText: e.target.value });\n  };\n  messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);\n","import React from \"react\";\nimport NewChatComponent from \"../newChat/newChat\";\nimport ChatListComponent from \"../chatList/chatList\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport ChatViewComponent from \"../chatView/chatView\";\nimport ChatTextBoxComponent from \"../chatTextBox/chatTextBox\";\n\nconst firebase = require(\"firebase\");\n\nclass DashboardComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      friends: [],\n      chats: [],\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.state.email) {\n      return (\n        <div className=\"dashboard-container\" id=\"dashboard-container\">\n          <ChatListComponent\n            history={this.props.history}\n            userEmail={this.state.email}\n            selectChatFn={this.selectChat}\n            chats={this.state.chats}\n            selectedChatIndex={this.state.selectedChat}\n            newChatBtnFn={this.newChatBtnClicked}\n          ></ChatListComponent>\n          {this.state.newChatFormVisible ? null : (\n            <ChatViewComponent\n              user={this.state.email}\n              chat={this.state.chats[this.state.selectedChat]}\n            ></ChatViewComponent>\n          )}\n          {this.state.selectedChat !== null &&\n          !this.state.newChatFormVisible ? (\n            <ChatTextBoxComponent\n              userClickedInputFn={this.messageRead}\n              submitMessageFn={this.submitMessage}\n            ></ChatTextBoxComponent>\n          ) : null}\n          {this.state.newChatFormVisible ? (\n            <NewChatComponent\n              goToChatFn={this.goToChat}\n              newChatSubmitFn={this.newChatSubmit}\n            ></NewChatComponent>\n          ) : null}\n          <Button onClick={this.signOut} className={classes.signOutBtn}>\n            Sign Out\n          </Button>\n        </div>\n      );\n    } else {\n      return <div>LOADING....</div>;\n    }\n  }\n\n  signOut = () => firebase.auth().signOut();\n\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now(),\n        }),\n        receiverHasRead: false,\n      });\n  };\n\n  // Always in alphabetical order:\n  // 'user1:user2'\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\n\n  newChatBtnClicked = () =>\n    this.setState({ newChatFormVisible: true, selectedChat: null });\n\n  newChatSubmit = async (chatObj) => {\n    const docKey = this.buildDocKey(chatObj.sendTo);\n    await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .set({\n        messages: [\n          {\n            message: chatObj.message,\n            sender: this.state.email,\n          },\n        ],\n        users: [this.state.email, chatObj.sendTo],\n        receiverHasRead: false,\n      });\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  };\n\n  selectChat = async (chatIndex) => {\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\n    this.messageRead();\n  };\n\n  goToChat = async (docKey, msg) => {\n    const usersInChat = docKey.split(\":\");\n    const chat = this.state.chats.find((_chat) =>\n      usersInChat.every((_user) => _chat.users.includes(_user))\n    );\n    this.setState({ newChatFormVisible: false });\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(msg);\n  };\n\n  // Chat index could be different than the one we are currently on in the case\n  // that we are calling this function from within a loop such as the chatList.\n  // So we will set a default value and can overwrite it when necessary.\n  messageRead = () => {\n    const chatIndex = this.state.selectedChat;\n    const docKey = this.buildDocKey(\n      this.state.chats[chatIndex].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    if (this.clickedMessageWhereNotSender(chatIndex)) {\n      firebase\n        .firestore()\n        .collection(\"chats\")\n        .doc(docKey)\n        .update({ receiverHasRead: true });\n    } else {\n      console.log(\"Clicked message where the user was the sender\");\n    }\n  };\n\n  clickedMessageWhereNotSender = (chatIndex) =>\n    this.state.chats[chatIndex].messages[\n      this.state.chats[chatIndex].messages.length - 1\n    ].sender !== this.state.email;\n\n  componentWillMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if (!_usr) this.props.history.push(\"/login\");\n      else {\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .where(\"users\", \"array-contains\", _usr.email)\n          .onSnapshot(async (res) => {\n            const chats = res.docs.map((_doc) => _doc.data());\n            await this.setState({\n              email: _usr.email,\n              chats: chats,\n              friends: [],\n            });\n          });\n      }\n    });\n  };\n}\n\nexport default withStyles(styles)(DashboardComponent);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, Link, HashRouter } from \"react-router-dom\";\nimport LoginComponent from \"./login/login\";\nimport SignupComponent from \"./signup/signup\";\nimport DashboardComponent from \"./dashboard/dashboard\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDhcL65NnZOlCzt5fR5VqNUX9Srl2Wpad0\",\n  authDomain: \"chatapp-c72b5.firebaseapp.com\",\n  databaseURL: \"https://chatapp-c72b5.firebaseio.com\",\n  projectId: \"chatapp-c72b5\",\n  storageBucket: \"chatapp-c72b5.appspot.com\",\n  messagingSenderId: \"500887238408\",\n  appId: \"1:500887238408:web:090b7fe0732b377c78debd\",\n  measurementId: \"G-91SHJECPWK\",\n});\n\nconst routing = (\n  <HashRouter basename=\"/\">\n    <div id=\"routing container\">\n      <Route path=\"\">\n        <Link to=\"./signup\">Sign Up</Link>\n      </Route>\n      <Route path=\"/login\" component={LoginComponent}></Route>\n      <Route path=\"/signup\" component={SignupComponent}></Route>\n      <Route path=\"/dashboard\" component={DashboardComponent}></Route>\n    </div>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}